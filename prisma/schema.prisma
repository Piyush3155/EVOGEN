// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Team {
  id        String   @id @default(cuid())
  teamName  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  codingMembers       Member[] @relation("CodingMembers")
  designingMembers    Member[] @relation("DesigningMembers")
  dataAnalyticsMembers Member[] @relation("DataAnalyticsMembers")
  cyberSecurityMembers Member[] @relation("CyberSecurityMembers")
  bestManagerMembers  Member[] @relation("BestManagerMembers")
  communicationMembers Member[] @relation("CommunicationMembers")
  
  // Tickets relation
  tickets    Ticket[]
}

model Member {
  id        String   @id @default(cuid())
  name      String
  email     String
  college   String
  usn       String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  codingTeam        Team?   @relation("CodingMembers", fields: [codingTeamId], references: [id])
  codingTeamId      String?

  designingTeam     Team?   @relation("DesigningMembers", fields: [designingTeamId], references: [id])
  designingTeamId   String?

  dataAnalyticsTeam Team?   @relation("DataAnalyticsMembers", fields: [dataAnalyticsTeamId], references: [id])
  dataAnalyticsTeamId String?

  cyberSecurityTeam Team?   @relation("CyberSecurityMembers", fields: [cyberSecurityTeamId], references: [id])
  cyberSecurityTeamId String?

  bestManagerTeam   Team?   @relation("BestManagerMembers", fields: [bestManagerTeamId], references: [id])
  bestManagerTeamId String?

  communicationTeam Team?   @relation("CommunicationMembers", fields: [communicationTeamId], references: [id])
  communicationTeamId String?

  @@index([codingTeamId])
  @@index([designingTeamId])
  @@index([dataAnalyticsTeamId])
  @@index([cyberSecurityTeamId])
  @@index([bestManagerTeamId])
  @@index([communicationTeamId])
}

model Ticket {
  id           String   @id @default(cuid())
  name         String
  email        String
  mobileNumber String
  teamName     String?
  ticketType   TicketType @default(STANDARD)
  ticketCount  Int      @default(1)
  totalAmount  Float
  ticketCode   String   @unique
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  
  // Relations
  team   Team?   @relation(fields: [teamId], references: [id])
  teamId String?
}


enum TicketType {
  STANDARD
  VIP
  PREMIUM
}
